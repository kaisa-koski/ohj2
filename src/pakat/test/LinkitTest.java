package pakat.test;
// Generated by ComTest BEGIN
import java.util.List;
import static org.junit.Assert.*;
import org.junit.*;
import pakat.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.03.15 15:37:17 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LinkitTest {



  // Generated by ComTest BEGIN
  /** testLisaa33 */
  @Test
  public void testLisaa33() {    // Linkit: 33
    Linkit linkit = new Linkit(); 
    assertEquals("From: Linkit line: 35", 0, linkit.getLkm()); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    assertEquals("From: Linkit line: 41", 2, linkit.getLkm()); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 43", 4, linkit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista84 */
  @Test
  public void testPoista84() {    // Linkit: 84
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 92", 4, linkit.getLkm()); 
    assertEquals("From: Linkit line: 93", linkki1, linkit.anna(1,2)); 
    linkit.poista(1,2); 
    assertEquals("From: Linkit line: 95", 3, linkit.getLkm()); 
    assertEquals("From: Linkit line: 96", null, linkit.anna(1,2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna133 */
  @Test
  public void testAnna133() {    // Linkit: 133
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 141", linkki1, linkit.anna(1,2)); 
    assertEquals("From: Linkit line: 142", linkki2, linkit.anna(1,3)); 
    linkit.poista(2, 3); 
    assertEquals("From: Linkit line: 144", null, linkit.anna(2, 3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEiPakassaLkm164 */
  @Test
  public void testEiPakassaLkm164() {    // Linkit: 164
    Linkki l1 = new Linkki(1,1,2,2);  //Pakka nro 1, kortti 1
    Linkki l2 = new Linkki(1,2,1,2);  //Pakka nro 1, kortti 2
    Linkki l3 = new Linkki(2,3,1,2);  //Pakka nro 2, kortti 3
    Linkki l4 = new Linkki(2,4,1,2);  //Pakka nro 2, kortti 4
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    assertEquals("From: Linkit line: 172", 2, linkit.eiPakassaLkm(1)); 
    assertEquals("From: Linkit line: 173", 1, linkit.eiPakassaLkm(2)); 
    assertEquals("From: Linkit line: 174", 0, linkit.eiPakassaLkm(3)); 
    assertEquals("From: Linkit line: 175", 0, linkit.eiPakassaLkm(4)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testVahenna196 */
  @Test
  public void testVahenna196() {    // Linkit: 196
    Linkki l1 = new Linkki(1,1,2,2);  //Pakka nro 1, kortti 1
    Linkki l2 = new Linkki(1,2,1,2);  //Pakka nro 1, kortti 2
    Linkki l3 = new Linkki(2,3,1,2);  //Pakka nro 2, kortti 3
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); 
    assertEquals("From: Linkit line: 203", 2, l1.getKp()); 
    linkit.vahenna(1,1,1); 
    assertEquals("From: Linkit line: 205", 1, l1.getKp()); 
    linkit.vahenna(1,1,1); 
    assertEquals("From: Linkit line: 207", null, linkit.anna(1,1));  //Poistettu kaikki EI_PAKASSA:idstÃ¤ joten poistettu koko linkki alkioiden joukosta.
    linkit.vahenna(2, 3, 1); 
    assertEquals("From: Linkit line: 209", 0, l3.getKp()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPakanKortit234 */
  @Test
  public void testPakanKortit234() {    // Linkit: 234
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,3,1,2);  //Pakka nro 3, kortti 3
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    List<Integer> kortit1 = linkit.pakanKortit(2); 
    assertEquals("From: Linkit line: 243", "[1, 2]", kortit1.toString()); 
    List<Integer> kortit2 = linkit.pakanKortit(3); 
    assertEquals("From: Linkit line: 245", "[1, 3]", kortit2.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKortinPakat268 */
  @Test
  public void testKortinPakat268() {    // Linkit: 268
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,2,1,2);  //Pakka nro 3, kortti 2
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    List<Integer> pakat1 = linkit.kortinPakat(2, true); 
    assertEquals("From: Linkit line: 277", "[2, 3]", pakat1.toString()); 
    List<Integer> pakat2 = linkit.kortinPakat(1, true); 
    assertEquals("From: Linkit line: 279", "[2]", pakat2.toString()); 
    List<Integer> pakat3 = linkit.kortinPakat(1, false); 
    assertEquals("From: Linkit line: 281", "[3]", pakat3.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoAktiivinen304 */
  @Test
  public void testOnkoAktiivinen304() {    // Linkit: 304
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,2,1,2);  //Pakka nro 3, kortti 2
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    assertEquals("From: Linkit line: 312", true, linkit.onkoAktiivinen(2)); 
    assertEquals("From: Linkit line: 313", false, linkit.onkoAktiivinen(3)); 
  } // Generated by ComTest END
}