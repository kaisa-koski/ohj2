package pakat.test;
// Generated by ComTest BEGIN
import java.util.List;
import static org.junit.Assert.*;
import org.junit.*;
import pakat.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.23 18:41:41 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LinkitTest {



  // Generated by ComTest BEGIN
  /** testLisaa96 */
  @Test
  public void testLisaa96() {    // Linkit: 96
    Linkit linkit = new Linkit(); 
    assertEquals("From: Linkit line: 98", 0, linkit.getLkm()); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    assertEquals("From: Linkit line: 104", 2, linkit.getLkm()); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 106", 4, linkit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista151 */
  @Test
  public void testPoista151() {    // Linkit: 151
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 159", 4, linkit.getLkm()); 
    assertEquals("From: Linkit line: 160", linkki1, linkit.anna(1,2)); 
    linkit.poista(1,2); 
    assertEquals("From: Linkit line: 162", 3, linkit.getLkm()); 
    assertEquals("From: Linkit line: 163", null, linkit.anna(1,2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna238 */
  @Test
  public void testAnna238() {    // Linkit: 238
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 246", linkki1, linkit.anna(1,2)); 
    assertEquals("From: Linkit line: 247", linkki2, linkit.anna(1,3)); 
    linkit.poista(2, 3); 
    assertEquals("From: Linkit line: 249", null, linkit.anna(2, 3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEiPakassaLkm269 */
  @Test
  public void testEiPakassaLkm269() {    // Linkit: 269
    Linkki l1 = new Linkki(1,1,2,2);  //Pakka nro 1, kortti 1
    Linkki l2 = new Linkki(1,2,1,2);  //Pakka nro 1, kortti 2
    Linkki l3 = new Linkki(2,3,1,2);  //Pakka nro 2, kortti 3
    Linkki l4 = new Linkki(2,4,1,2);  //Pakka nro 2, kortti 4
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    assertEquals("From: Linkit line: 277", 2, linkit.eiPakassaLkm(1)); 
    assertEquals("From: Linkit line: 278", 1, linkit.eiPakassaLkm(2)); 
    assertEquals("From: Linkit line: 279", 0, linkit.eiPakassaLkm(3)); 
    assertEquals("From: Linkit line: 280", 0, linkit.eiPakassaLkm(4)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testVahenna301 */
  @Test
  public void testVahenna301() {    // Linkit: 301
    Linkki l1 = new Linkki(1,1,2,2);  //Pakka nro 1, kortti 1
    Linkki l2 = new Linkki(1,2,1,2);  //Pakka nro 1, kortti 2
    Linkki l3 = new Linkki(2,3,1,2);  //Pakka nro 2, kortti 3
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); 
    assertEquals("From: Linkit line: 308", 2, l1.getKp()); 
    linkit.vahenna(1,1,1); 
    assertEquals("From: Linkit line: 310", 1, l1.getKp()); 
    linkit.vahenna(1,1,1); 
    assertEquals("From: Linkit line: 312", null, linkit.anna(1,1));  //Poistettu kaikki EI_PAKASSA:idstÃ¤ joten poistettu koko linkki alkioiden joukosta.
    linkit.vahenna(2, 3, 1); 
    assertEquals("From: Linkit line: 314", 0, l3.getKp()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPakanKortit339 */
  @Test
  public void testPakanKortit339() {    // Linkit: 339
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,3,1,2);  //Pakka nro 3, kortti 3
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    List<Integer> kortit1 = linkit.pakanKortit(2); 
    assertEquals("From: Linkit line: 348", "[1, 2]", kortit1.toString()); 
    List<Integer> kortit2 = linkit.pakanKortit(3); 
    assertEquals("From: Linkit line: 350", "[1, 3]", kortit2.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKortinPakat373 */
  @Test
  public void testKortinPakat373() {    // Linkit: 373
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,2,1,2);  //Pakka nro 3, kortti 2
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    List<Integer> pakat1 = linkit.kortinPakat(2, true); 
    assertEquals("From: Linkit line: 382", "[2, 3]", pakat1.toString()); 
    List<Integer> pakat2 = linkit.kortinPakat(1, true); 
    assertEquals("From: Linkit line: 384", "[2]", pakat2.toString()); 
    List<Integer> pakat3 = linkit.kortinPakat(1, false); 
    assertEquals("From: Linkit line: 386", "[3]", pakat3.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoAktiivinen443 */
  @Test
  public void testOnkoAktiivinen443() {    // Linkit: 443
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,2,1,2);  //Pakka nro 3, kortti 2
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    assertEquals("From: Linkit line: 451", true, linkit.onkoAktiivinen(2)); 
    assertEquals("From: Linkit line: 452", false, linkit.onkoAktiivinen(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString467 */
  @Test
  public void testToString467() {    // Linkit: 467
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1, 2, 2, 4); 
    Linkki linkki2 = new Linkki(1, 3, 2, 2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    assertEquals("From: Linkit line: 472", "lid|pid|kid| kpl nyt pakassa | kpl pakkaan kuuluu\n" + linkki1.getID() + "|1|2|2|4\n" + linkki2.getID() + "|1|3|2|2", linkit.toString()); 
  } // Generated by ComTest END
}