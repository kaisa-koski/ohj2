package pakat.test;
// Generated by ComTest BEGIN
import java.util.List;
import static org.junit.Assert.*;
import org.junit.*;
import pakat.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.06 11:31:40 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class LinkitTest {



  // Generated by ComTest BEGIN
  /** testLisaa58 */
  @Test
  public void testLisaa58() {    // Linkit: 58
    Linkit linkit = new Linkit(); 
    assertEquals("From: Linkit line: 60", 0, linkit.getLkm()); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    assertEquals("From: Linkit line: 66", 2, linkit.getLkm()); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 68", 4, linkit.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista111 */
  @Test
  public void testPoista111() {    // Linkit: 111
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 119", 4, linkit.getLkm()); 
    assertEquals("From: Linkit line: 120", linkki1, linkit.anna(1,2)); 
    linkit.poista(1,2); 
    assertEquals("From: Linkit line: 122", 3, linkit.getLkm()); 
    assertEquals("From: Linkit line: 123", null, linkit.anna(1,2)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna158 */
  @Test
  public void testAnna158() {    // Linkit: 158
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1,2,1,1); 
    Linkki linkki2 = new Linkki(1,3,0,2); 
    Linkki linkki3 = new Linkki(2,1,1,1); 
    Linkki linkki4 = new Linkki(2,3,2,2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    linkit.lisaa(linkki3); linkit.lisaa(linkki4); 
    assertEquals("From: Linkit line: 166", linkki1, linkit.anna(1,2)); 
    assertEquals("From: Linkit line: 167", linkki2, linkit.anna(1,3)); 
    linkit.poista(2, 3); 
    assertEquals("From: Linkit line: 169", null, linkit.anna(2, 3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEiPakassaLkm189 */
  @Test
  public void testEiPakassaLkm189() {    // Linkit: 189
    Linkki l1 = new Linkki(1,1,2,2);  //Pakka nro 1, kortti 1
    Linkki l2 = new Linkki(1,2,1,2);  //Pakka nro 1, kortti 2
    Linkki l3 = new Linkki(2,3,1,2);  //Pakka nro 2, kortti 3
    Linkki l4 = new Linkki(2,4,1,2);  //Pakka nro 2, kortti 4
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    assertEquals("From: Linkit line: 197", 2, linkit.eiPakassaLkm(1)); 
    assertEquals("From: Linkit line: 198", 1, linkit.eiPakassaLkm(2)); 
    assertEquals("From: Linkit line: 199", 0, linkit.eiPakassaLkm(3)); 
    assertEquals("From: Linkit line: 200", 0, linkit.eiPakassaLkm(4)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testVahenna221 */
  @Test
  public void testVahenna221() {    // Linkit: 221
    Linkki l1 = new Linkki(1,1,2,2);  //Pakka nro 1, kortti 1
    Linkki l2 = new Linkki(1,2,1,2);  //Pakka nro 1, kortti 2
    Linkki l3 = new Linkki(2,3,1,2);  //Pakka nro 2, kortti 3
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); 
    assertEquals("From: Linkit line: 228", 2, l1.getKp()); 
    linkit.vahenna(1,1,1); 
    assertEquals("From: Linkit line: 230", 1, l1.getKp()); 
    linkit.vahenna(1,1,1); 
    assertEquals("From: Linkit line: 232", null, linkit.anna(1,1));  //Poistettu kaikki EI_PAKASSA:idstä joten poistettu koko linkki alkioiden joukosta.
    linkit.vahenna(2, 3, 1); 
    assertEquals("From: Linkit line: 234", 0, l3.getKp()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPakanKortit259 */
  @Test
  public void testPakanKortit259() {    // Linkit: 259
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,3,1,2);  //Pakka nro 3, kortti 3
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    List<Integer> kortit1 = linkit.pakanKortit(2); 
    assertEquals("From: Linkit line: 268", "[1, 2]", kortit1.toString()); 
    List<Integer> kortit2 = linkit.pakanKortit(3); 
    assertEquals("From: Linkit line: 270", "[1, 3]", kortit2.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKortinPakat293 */
  @Test
  public void testKortinPakat293() {    // Linkit: 293
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,2,1,2);  //Pakka nro 3, kortti 2
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    List<Integer> pakat1 = linkit.kortinPakat(2, true); 
    assertEquals("From: Linkit line: 302", "[2, 3]", pakat1.toString()); 
    List<Integer> pakat2 = linkit.kortinPakat(1, true); 
    assertEquals("From: Linkit line: 304", "[2]", pakat2.toString()); 
    List<Integer> pakat3 = linkit.kortinPakat(1, false); 
    assertEquals("From: Linkit line: 306", "[3]", pakat3.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testOnkoAktiivinen331 */
  @Test
  public void testOnkoAktiivinen331() {    // Linkit: 331
    Linkki l1 = new Linkki(2,1,2,2);  //Pakka nro 2, kortti 1
    Linkki l2 = new Linkki(2,2,2,2);  //Pakka nro 2, kortti 2
    Linkki l3 = new Linkki(3,1,0,2);  //Pakka nro 3, kortti 1
    Linkki l4 = new Linkki(3,2,1,2);  //Pakka nro 3, kortti 2
    Linkit linkit = new Linkit(); 
    linkit.lisaa(l1); linkit.lisaa(l2); 
    linkit.lisaa(l3); linkit.lisaa(l4); 
    assertEquals("From: Linkit line: 339", true, linkit.onkoAktiivinen(2)); 
    assertEquals("From: Linkit line: 340", false, linkit.onkoAktiivinen(3)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString354 */
  @Test
  public void testToString354() {    // Linkit: 354
    Linkit linkit = new Linkit(); 
    Linkki linkki1 = new Linkki(1, 2, 2, 4); 
    Linkki linkki2 = new Linkki(1, 3, 2, 2); 
    linkit.lisaa(linkki1); linkit.lisaa(linkki2); 
    assertEquals("From: Linkit line: 359", "lid|pid|kid| kpl nyt pakassa | kpl pakkaan kuuluu\n" + linkki1.getID() + "|1|2|2|4\n" + linkki2.getID() + "|1|3|2|2", linkit.toString());  //TODO: Testi ei toimi??? Antaa aina vihreää
  } // Generated by ComTest END
}